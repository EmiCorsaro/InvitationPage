# ASP.NET Core (.NET Framework)
trigger:
- master

parameters:
- name: buildConfiguration # name of the parameter; required
  default: 'Release'
- name: projectFolder
  default: ' '
- name: projectsToBuild
  default: '**/InvitationPage-backend.csproj'
- name: projectsToTest
  default: '**/*UnitTests.csproj'

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: 'NuGet packages'

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
    includePreviewVersions: true

- task: NuGetCommand@2
  displayName: 'Restore'
  inputs:
    restoreSolution: '$(solution)'
  
- task: DotNetCoreCLI@2
  displayName: 'Build of projects'
  inputs:
    command: 'build'
    projects: '${{ parameters.projectsToBuild}}'
    arguments: '--configuration ${{ parameters.buildConfiguration }}'

- task: DotNetCoreCLI@2
  displayName: 'Build of tests'
  inputs:
    command: 'build'
    projects: '${{ parameters.projectsToTest}}'
    arguments: '--configuration ${{ parameters.buildConfiguration }}'
  
- task: DotNetCoreCLI@2
  displayName: 'Unit Tests'
  inputs:
    command: 'test'
    projects: '${{ parameters.projectsToTest}}'
    arguments: '--configuration ${{ parameters.buildConfiguration }} --collect:"XPlat Code Coverage" -- RunConfiguration.DisableAppDomain=true'
  
- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . dotnet-reportgenerator-globaltool
  displayName: Install ReportGenerator tool

- script: ./reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:${{ parameters.projectFolder}}/coverlet/reports -reporttypes:"Cobertura"
  displayName: Create reports

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: ${{ parameters.projectFolder}}/coverlet/reports/Cobertura.xml  